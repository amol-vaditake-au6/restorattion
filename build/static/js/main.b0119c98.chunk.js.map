{"version":3,"sources":["redux/appMenu/constants.js","constants/layout.js","redux/auth/actions.js","helpers/authUtils.js","redux/layout/actions.js","redux/appMenu/actions.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/constants.js","redux/layout/constants.js"],"names":["INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","loginUser","username","password","type","LOGIN_USER","payload","loginUserSuccess","user","LOGIN_USER_SUCCESS","loginUserFailed","error","LOGIN_USER_FAILED","registerUser","fullname","email","REGISTER_USER","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserFailed","REGISTER_USER_FAILED","logoutUser","history","LOGOUT_USER","forgetPasswordSuccess","passwordResetStatus","FORGET_PASSWORD_SUCCESS","forgetPasswordFailed","FORGET_PASSWORD_FAILED","isUserAuthenticated","getLoggedInUser","decoded","jwtDecode","token","currentTime","Date","now","exp","console","warn","Cookies","get","JSON","parse","changeLayout","layout","CHANGE_LAYOUT","changeLayoutWidth","width","CHANGE_LAYOUT_WIDTH","changeSidebarTheme","theme","CHANGE_SIDEBAR_THEME","changeSidebarType","sidebarType","CHANGE_SIDEBAR_TYPE","showRightSidebar","SHOW_RIGHT_SIDEBAR","hideRightSidebar","HIDE_RIGHT_SIDEBAR","initMenu","initMenuSuccess","menuItems","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","Login","React","lazy","Logout","Register","ForgetPassword","Confirm","Dashboard","BranchAdmin","NewOnlineClients","AllClients","AllBranches","AllCoaches","PrivateRoute","Component","component","roles","rest","render","props","to","pathname","state","from","location","loggedInUser","indexOf","role","rootRoute","path","exact","route","dashboardRoutes","name","icon","FeatherIcon","header","badge","variant","text","superAdminRoutesNew","children","branchAdminRoutesNew","BranchCoachClientRoutes","authRoutes","Route","flattenRoutes","routes","flatRoutes","forEach","item","push","superadmin","superadminAuthRoutes","branchadmin","branchadminAuthRoutes","branchcoach","branchcoachAuthRoutes","authProtectedRoutes","allRoutes","usertype","localStorage","getItem","allFlattenRoutes","loading","AuthLayout","Loadable","loader","loaded","default","VerticalLayout","HorizontalLayout","Routes","getLayout","layoutCls","this","layoutType","layoutConstants","Layout","map","index","key","connect","Auth","users","id","firstName","lastName","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","length","responseJson","ok","json","split","newUser","message","headers","Authorization","then","response","configureFakeBackend","App","Boolean","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","TOGGLE_RIGHT_SIDEBAR","FORGET_PASSWORD","AppMenu","combineReducers","fetchJSON","options","status","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","call","put","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","uuid","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0119c98.chunk.js","sourcesContent":["/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\n\nexport const loginUser = (username, password) => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user) => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error) => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname, email, password) => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user) => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error) => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history) => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username) => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error) => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser };\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\n\nexport const changeLayout = (layout) => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width) => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme) => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType) => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = () => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = () => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = () => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\nexport const initMenu = () => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems) => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = () => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport * as FeatherIcon from 'react-feather';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\nconst Dashboard = React.lazy(() => import('../pages/dashboard'));\n\n\n// super admin\n\nconst BranchAdmin = React.lazy(() => import('../pages/SuperAdmin/BranchAdmin'));\nconst NewOnlineClients = React.lazy(() => import('../pages/SuperAdmin/ClientList/NewOnlineClients'));\nconst AllClients = React.lazy(() => import('../pages/SuperAdmin/ClientList/AllClients'));\nconst AllBranches = React.lazy(() => import('../pages/SuperAdmin/BranchCoach/AllBranches'));\nconst AllCoaches = React.lazy(() => import('../pages/SuperAdmin/BranchCoach/AllCoaches'));\n\n// handle auth and authorization\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// const usertype = localStorage.getItem('usertype');\n\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard\" />,\n    route: PrivateRoute,\n};\n\n// dashboards\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboard',\n    icon: FeatherIcon.Home,\n    header: 'Navigation',\n    badge: {\n        variant: 'success',\n        text: '1',\n    },\n    component: Dashboard,\n    roles: ['Admin'],\n    route: PrivateRoute,\n};\n\n// super admin\n\n\nconst superAdminRoutesNew = {\n    path: '/superadmin/',\n    name: 'Super Admin ',\n    icon: FeatherIcon.Inbox,\n    children: [\n        {\n            path: '/superadmin/newclients',\n            name: 'New Online Clients',\n            component: NewOnlineClients,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n        {\n            path: '/superadmin/allclients',\n            name: 'All Clients',\n            component: AllClients,\n            route: PrivateRoute,\n            roles: ['Admin'],\n\t\t\t\t},\n\t\t\t\t{\n            path: '/superadmin/branch/allbranches',\n            name: 'All Branches',\n            component: AllBranches,\n            route: PrivateRoute,\n            roles: ['Admin'],\n\t\t\t\t},\n\t\t\t\t{\n            path: '/superadmin/branch/allcoaches',\n            name: 'All Coaches',\n            component: AllCoaches,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n    ],\n};\n\n\nconst branchAdminRoutesNew = {\n    path: '/superadmin/',\n    name: 'Branch Admin ',\n    icon: FeatherIcon.Inbox,\n    children: [\n        {\n            path: '/admin/dashboard',\n            name: 'My Online Clients',\n            component: AllClients,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n\t\t\t\t{\n            path: '/superadmin/branch/allcoaches',\n            name: 'All Coaches',\n            component: AllCoaches,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n    ],\n};\n\n\n\n\n\n\n\n// branch admin\n\n\n\n// branch coach\nconst BranchCoachClientRoutes = {\n    path: '/branchcoach/client',\n    name: 'Client',\n    icon: FeatherIcon.Inbox,\n    header: 'Branch Coach',\n    children: [\n        {\n            path: '/branchcoach/client/checklist',\n            name: 'Daily Checklist',\n            component: BranchAdmin,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n        {\n            path: '/branchcoach/client/menu',\n            name: 'Daily Menu',\n            component: BranchAdmin,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n        {\n            path: '/branchcoach/client/repost',\n            name: 'Medical Repost',\n            component: BranchAdmin,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n        {\n            path: '/branchcoach/client/prescription',\n            name: 'Prescription',\n            component: BranchAdmin,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n        {\n            path: '/branchcoach/client/profile',\n            name: 'Profile',\n            component: BranchAdmin,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n        {\n            path: '/branchcoach/client/feedback',\n            name: 'Feedback',\n            component: BranchAdmin,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n        {\n            path: '/branchcoach/client/health',\n            name: 'Health Progress',\n            component: BranchAdmin,\n            route: PrivateRoute,\n            roles: ['Admin'],\n        },\n    ],\n};\n\n\n\n// auth\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        {\n            path: '/account/confirm',\n            name: 'Confirm',\n            component: Confirm,\n            route: Route,\n        },\n        {\n            path: '/account/forget-password',\n            name: 'Forget Password',\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = (routes) => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach((item) => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\nconst superadmin = [rootRoute,dashboardRoutes,superAdminRoutesNew,authRoutes];\n\nconst superadminAuthRoutes = [rootRoute,dashboardRoutes,superAdminRoutesNew];\n\nconst branchadmin = [rootRoute, dashboardRoutes, branchAdminRoutesNew,authRoutes];\n\nconst branchadminAuthRoutes = [rootRoute,dashboardRoutes, branchAdminRoutesNew];\n\nconst branchcoach = [rootRoute, dashboardRoutes, BranchCoachClientRoutes, authRoutes];\n\nconst branchcoachAuthRoutes = [dashboardRoutes, BranchCoachClientRoutes];\n\n// All routes\n\n\nlet authProtectedRoutes=[];\nlet allRoutes=[]\nconst usertype = localStorage.getItem('usertype')\nif(usertype==='superadmin'){\n\tallRoutes = superadmin;\n\tauthProtectedRoutes = superadminAuthRoutes;\n} else if (usertype === 'branchadmin') {\n  allRoutes = branchadmin;\n  authProtectedRoutes = branchadminAuthRoutes;\n} else if (usertype === 'branchcoach') {\n\tallRoutes = branchcoach;\n  authProtectedRoutes = branchcoachAuthRoutes;\n}\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nclass Routes extends Component {\r\n\r\n    // returns the layout\r\n    getLayout = () => {\r\n        if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (this.props.layout.layoutType) {\r\n            case layoutConstants.LAYOUT_HORIZONTAL:\r\n                layoutCls = HorizontalLayout;\r\n                break;\r\n            default:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.getLayout();\r\n        \r\n        // rendering the router with layout\r\n        return <BrowserRouter>\r\n            <Layout {...this.props}>\r\n                <Switch>\r\n                    {routes.map((route, index) => {\r\n                        return (\r\n                            !route.children ?\r\n                                <route.route\r\n                                    key={index}\r\n                                    path={route.path}\r\n                                    roles={route.roles}\r\n                                    exact={route.exact}\r\n                                    component={route.component}></route.route>\r\n                                : null\r\n                        );\r\n                    })}\r\n                </Switch>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function(url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            role: 'Admin',\n                            token:\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Username or password is incorrect');\n                    }\n                    return;\n                }\n\n                // register\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // add new users\n                    let { firstName, lastName } = params.fullname.split(' ');\n                    let newUser = {\n                        id: users.length + 1,\n                        username: firstName,\n                        password: params.password,\n                        firstName: firstName,\n                        lastName: lastName,\n                        role: 'Admin',\n                    };\n                    users.push({ newUser });\n\n                    let responseJson = {\n                        id: newUser.id,\n                        username: newUser.username,\n                        firstName: newUser.firstName,\n                        lastName: newUser.lastName,\n                        role: newUser.role,\n                        token:\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\n                    };\n                    resolve({ ok: true, json: () => responseJson });\n                    return;\n                }\n\n                // forget password\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username;\n                    });\n\n                    if (filteredUsers.length) {\n                        let responseJson = {\n                            message: \"We've sent you a link to reset password to your registered email.\",\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Sorry, we could not find any registered user with entered username');\n                    }\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (\n                        opts.headers &&\n                        opts.headers.Authorization ===\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU'\n                    ) {\n                        resolve({ ok: true, json: () => users });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n            }, 500);\n        });\n    };\n}\n","import React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\n// setup fake backend\nimport { configureFakeBackend } from './helpers';\n\n// Themes\n\n// default\nimport './assets/scss/theme.scss';\n\n// dark\n// import './assets/scss/theme-dark.scss';\n\n// rtl\n// import './assets/scss/theme-rtl.scss';\n\n\n// configure fake backend\nconfigureFakeBackend();\n\n/**\n * Main app component\n */\nclass App extends Component {\n  render() {\n    return <Routes></Routes>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\n\nconst Layout = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\n\nconst Auth = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\n\nconst AppMenu = (state = {}, action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\n\nimport { combineReducers } from 'redux';\nimport Layout from './layout/reducers';\nimport Auth from './auth/reducers';\nimport AppMenu from './appMenu/reducers';\n\nexport default combineReducers({\n    Auth,\n    AppMenu,\n    Layout,\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems, parentId) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = (menuItems) => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\n\r\nconst routes = authProtectedRoutes;\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\nimport { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\nimport appMenuSaga from './appMenu/saga';\n\nexport default function* rootSaga(getState: any): any {\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n"],"sourceRoot":""}