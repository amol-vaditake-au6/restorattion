{"version":3,"sources":["components/Loader.js","components/OverviewWidget.js","components/StatisticsChartWidget.js","pages/dashboard/Statistics.js","pages/dashboard/index.js"],"names":["PreLoaderWidget","Component","render","className","role","OverviewWidget","props","title","items","bodyClass","totalItems","length","cardBodyClass","Card","classNames","bgClass","CardBody","map","item","idx","Icon","icon","borderClass","Media","key","body","description","StatisticsChartWidget","options","chart","parentHeightOffset","toolbar","show","sparkline","enabled","fill","type","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","xaxis","crosshairs","width","stroke","curve","tooltip","theme","fixed","x","y","formatter","marker","colors","series","name","data","height","trend","textClass","value","Statistics","useState","records","setRecords","useEffect","a","axios","get","user","branches","coaches","Fragment","Row","Col","md","xl","Dashboard","constructor","super","oneWeekAgo","Date","setDate","getDate","this","state","getLoggedInUser","filterDate","loading","Loader","sm","onChange","date","setState","mode","UncontrolledButtonDropdown","DropdownToggle","color","DropdownMenu","right","DropdownItem","divider","Users","Image","ShoppingBag"],"mappings":"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","file":"static/js/25.591b76ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * Renders the preloader\n */\nclass PreLoaderWidget extends Component {\n\n    render() {\n        return (\n            <div className=\"preloader\">\n                <div className=\"status\">\n                    <div className=\"spinner-border avatar-sm text-primary m-2\" role=\"status\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PreLoaderWidget;","import React from 'react';\nimport { Card, CardBody, Media } from 'reactstrap';\nimport classNames from 'classnames';\n\n\nconst OverviewWidget = (props) => {\n\n    const title = props.title || \"Overview\";\n    const items = props.items || [];\n    const bodyClass = props.bodyClass || \"px-3 py-4\";\n    const totalItems = items.length;\n    const cardBodyClass = props.cardBodyClass || \"p-0\";\n\n    return (\n\n        <Card className={classNames(props.bgClass)}>\n            <CardBody className={classNames(cardBodyClass)}>\n                <h5 className=\"card-title header-title border-bottom p-3 mb-0\">{title}</h5>\n\n                {items.map((item, idx) => {\n                    const Icon = item.icon || null;\n                    var borderClass = \"border-bottom\";\n\n                    if (totalItems === idx + 1) {\n                        borderClass = null;\n                    }\n\n                    return <Media className={classNames(bodyClass, borderClass)} key={idx}>\n                        <Media body>\n                            <h4 className=\"mt-0 mb-1 font-size-22 font-weight-normal\">{item.title}</h4>\n                            <span className=\"text-muted\">{item.description}</span>\n                        </Media>\n                        {Icon && <Icon className=\"align-self-center icon-dual icon-lg\"></Icon>}\n                    </Media>\n                })}\n\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default OverviewWidget;\n","import React from 'react';\nimport { Card, CardBody, Media } from 'reactstrap';\nimport Chart from 'react-apexcharts';\nimport classNames from 'classnames';\n\nconst StatisticsChartWidget = (props) => {\n    const options = {\n        chart: {\n            parentHeightOffset: 0,\n            toolbar: {\n                show: false\n            },\n            sparkline: {\n                enabled: true,\n            }\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                type: \"vertical\",\n                shadeIntensity: 1,\n                inverseColors: false,\n                opacityFrom: 0.45,\n                opacityTo: 0.05,\n                stops: [45, 100]\n              },\n        },\n        xaxis: {\n            crosshairs: {\n                width: 1,\n            },\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: function () {\n                        return ''\n                    }\n                }\n            },\n            marker: {\n                show: false\n            }\n        },\n        colors: props.colors || ['#727cf5'],\n    };\n    const type = props.type || 'area';\n    const series = [{ name: props.name || 'Data', data: props.data || [] }];\n\n    return (\n\n        <Card className={classNames(props.bgClass)}>\n            <CardBody className=\"p-0\">\n                <Media className=\"p-3\">\n                    <Media body>\n                        <span className=\"text-muted text-uppercase font-size-12 font-weight-bold\">{props.description}</span>\n                        <h2 className=\"mb-0\">{props.title}</h2>\n                    </Media>\n                    <div className=\"align-self-center\">\n                        <Chart className=\"apex-charts\" options={options} series={series} type={type} height={45} width={90} />\n                        <span className={classNames(props.trend.textClass, 'font-weight-bold', 'font-size-13')}><i className={`${props.trend.icon}`}></i> {props.trend.value}</span>\n                    </div>\n                </Media>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default StatisticsChartWidget;\n","import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport { Row, Col } from 'reactstrap';\n\nimport StatisticsChartWidget from '../../components/StatisticsChartWidget';\n\nconst Statistics = () => {\n\tconst [records,setRecords]=useState({})\n\tuseEffect(() => {\n    (async () => {\n        const user = await axios.get(\n            \"https://restoration-backend.herokuapp.com/api/newClients\"\n\t\t\t\t);\n\t\t\t\tconst branches = await axios.get(\n            \"https://restoration-backend.herokuapp.com/api/sAdmin/branches\"\n\t\t\t\t);\n\t\t\t\tconst coaches = await axios.get(\n            \"https://restoration-backend.herokuapp.com/api/sAdmin/coaches\"\n        );\n        setRecords({user:user.data?.length,branches:branches.data?.length,coaches:coaches.data?.length});\n    })();\n\t\t}, []);\n    return (\n        <React.Fragment>\n            <Row>\n                <Col md={6} xl={3}>\n                    <StatisticsChartWidget\n                        description=\"All Branches\"\n                        title={records?.branches || 0}\n                        data={[25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54]}\n                        trend={{\n                            textClass: 'text-success',\n                            icon: 'uil uil-arrow-up',\n                            value: '10.21%',\n                        }}></StatisticsChartWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                    <StatisticsChartWidget\n                        description=\"All Coaches\"\n                        title={records?.coaches || 0}\n                        colors={['#f77e53']}\n                        data={[25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54]}\n                        trend={{\n                            textClass: 'text-danger',\n                            icon: 'uil uil-arrow-down',\n                            value: '5.05%',\n                        }}></StatisticsChartWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                    <StatisticsChartWidget\n                        description=\"All Clients\"\n                        title={records?.user || 0}\n                        colors={['#43d39e']}\n                        data={[25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54]}\n                        trend={{\n                            textClass: 'text-success',\n                            icon: 'uil uil-arrow-up',\n                            value: '25.16%',\n                        }}></StatisticsChartWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                    <StatisticsChartWidget\n                        description=\"New Clients\"\n                        title={records?.user || 0}\n                        colors={['#ffbe0b']}\n                        data={[25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54]}\n                        trend={{\n                            textClass: 'text-danger',\n                            icon: 'uil uil-arrow-down',\n                            value: '5.05%',\n                        }}></StatisticsChartWidget>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport { Row, Col, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\nimport Flatpickr from 'react-flatpickr'\nimport { ChevronDown, Mail, Printer, File, Users, Image, ShoppingBag } from 'react-feather';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\nimport Loader from '../../components/Loader';\nimport OverviewWidget from '../../components/OverviewWidget';\n\nimport Statistics from './Statistics';\n\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        var oneWeekAgo = new Date();\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 15);\n\n        this.state = {\n            user: getLoggedInUser(),\n            filterDate: [oneWeekAgo, new Date()]\n        };\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"\">\n                    { /* preloader */}\n                    {this.props.loading && <Loader />}\n\n                    <Row className=\"page-title align-items-center\">\n                        <Col sm={4} xl={6}>\n                            <h4 className=\"mb-1 mt-0\">Dashboard</h4>\n                        </Col>\n                        <Col sm={8} xl={6}>\n                            <form className=\"form-inline float-sm-right mt-3 mt-sm-0\">\n                                <div className=\"form-group mb-sm-0 mr-2\">\n                                    <Flatpickr value={this.state.filterDate}\n                                        onChange={date => { this.setState({ filterDate: date }) }} options={{ mode: \"range\" }}\n                                        className=\"form-control\" />\n                                </div>\n                                <UncontrolledButtonDropdown>\n                                    <DropdownToggle color=\"primary\" className=\"dropdown-toggle\">\n                                        <i className='uil uil-file-alt mr-1'></i>Download\n                                            <i className=\"icon ml-1\"><ChevronDown /></i>\n                                    </DropdownToggle>\n                                    <DropdownMenu right>\n                                        <DropdownItem>\n                                            <Mail className=\"icon-dual icon-xs mr-2\"></Mail>\n                                            <span>Email</span>\n                                        </DropdownItem>\n                                        <DropdownItem>\n                                            <Printer className=\"icon-dual icon-xs mr-2\"></Printer>\n                                            <span>Print</span>\n                                        </DropdownItem>\n                                        <DropdownItem divider />\n                                        <DropdownItem>\n                                            <File className=\"icon-dual icon-xs mr-2\"></File>\n                                            <span>Re-Generate</span>\n                                        </DropdownItem>\n                                    </DropdownMenu>\n                                </UncontrolledButtonDropdown>\n                            </form>\n                        </Col>\n                    </Row>\n\n                    {/* stats */}\n                    <Statistics></Statistics>\n\n                    {/* charts */}\n                    <Row>\n                        <Col xl={3}>\n                            <OverviewWidget items={[\n                                { title: '121,000', description: 'Total Visitors', icon: Users },\n                                { title: '21,000', description: 'Product Views', icon: Image },\n                                { title: '$21.5', description: 'Revenue Per Visitor', icon: ShoppingBag }\n                            ]}></OverviewWidget>\n                        </Col>\n\n                        {/* <Col xl={6}>\n                            <RevenueChart />\n                        </Col>\n                        <Col xl={3}>\n                            <TargetChart />\n                        </Col> */}\n                    </Row>\n\n                    {/* charts */}\n                    {/* <Row>\n                        <Col xl={5}>\n                            <SalesChart />\n                        </Col>\n                        <Col xl={7}>\n                            <Orders />\n                        </Col>\n                    </Row> */}\n\n                    {/* <Row>\n                        <Col xl={4}>\n                            <Performers />\n                        </Col>\n                        <Col xl={4}>\n                            <Tasks />\n                        </Col>\n                        <Col xl={4}>\n                            <Chat />\n                        </Col>\n                    </Row> */}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default Dashboard;"],"sourceRoot":""}