{"version":3,"sources":["components/PageTitle.js","pages/SuperAdmin/ClientList/AllClients.js"],"names":["PageTitle","props","title","items","breadCrumbItems","Fragment","className","to","map","item","index","active","key","label","path","defaultSorted","dataField","order","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","type","name","id","defaultValue","onChange","e","target","value","option","idx","text","AllClients","useState","records","setRecords","userId","setUserId","columns","headerStyle","colum","colIndex","sort","events","onClick","column","columnIndex","row","localStorage","getItem","_id","handleShowCoach","handleShow","SearchBar","Search","ExportCSVButton","CSVExport","branchOptions","setBranchOptions","coachOptions","setCoachOptions","useEffect","a","Axios","get","result","branches","coaches","newClients","data","filter","branchName","branchOptionsAll","adminName","length","unshift","coachOptionsAll","full_name","show","setShow","showCoach","setShowCoach","branchId","setBranchId","coachId","setCoachId","setBranchName","coachName","setCoachName","handleChangeCoach","nativeEvent","selectedIndex","submitBranch","post","handleCloseCommon","submitCoach","bootstrap4","keyField","search","exportCSV","onlyExportFiltered","exportAll","searchProps","csvProps","baseProps","bordered","pagination","paginationFactory","sizePerPage","sizePerPageList","wrapperClasses","onHide","Header","closeButton","Title","Body","Footer","variant"],"mappings":"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","file":"static/js/26.f290512a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n/**\n * Renders the PageTitle\n */\nconst PageTitle = (props) => {\n    const title = props.title || \"\";\n    const items = props.breadCrumbItems || \"\";\n    return (\n        <React.Fragment>\n            \n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\n                <BreadcrumbItem>\n                    <Link to=\"/\">Restoration</Link>\n                </BreadcrumbItem>\n                {items.map((item, index) => {\n                    return item.active ? (\n                        <BreadcrumbItem active key={index}>\n                            {item.label}\n                        </BreadcrumbItem>\n                    ) : (\n                            <BreadcrumbItem key={index}>\n                                <Link to={item.path}>{item.label}</Link>\n                            </BreadcrumbItem>\n                        );\n                })}\n            </Breadcrumb>\n\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\n        </React.Fragment>\n    )\n}\n\nexport default PageTitle;","import React,{useState,useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport { Button ,Modal} from 'react-bootstrap';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    Input,\r\n} from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport PageTitle from '../../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-1\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">entries</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst AllClients = () => {\r\n\t\r\n\t\tconst [records,setRecords]=useState([])\r\n\t\t\r\n\t\tconst [userId,setUserId]=useState('')\r\n\t\t\tconst columns = [\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Client ID',\r\n\t\t\t\t\t\tdataField: '_id',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Name',\r\n\t\t\t\t\t\tdataField: 'full_name',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Age',\r\n\t\t\t\t\t\tdataField: 'age',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Gender',\r\n\t\t\t\t\t\tdataField: 'gender',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Coach',\r\n\t\t\t\t\t\tdataField: 'coachName',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t\t\tevents: {\r\n\t\t\t\t\t\tonClick: (e, column, columnIndex, row) => {\r\n\t\t\t\t\t\t\tif(localStorage.getItem('usertype')==='branchadmin'){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t setUserId(row._id);\r\n\t\t\t\t\t\t\t handleShowCoach()\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Status',\r\n\t\t\t\t\t\tdataField: 'status',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Contact',\r\n\t\t\t\t\t\tdataField: 'phone_number',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'City',\r\n\t\t\t\t\t\tdataField: 'city',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Branch Name',\r\n\t\t\t\t\t\tdataField: 'branchName',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tevents: {\r\n\t\t\t\t\t\tonClick: (e, column, columnIndex, row) => {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(localStorage.getItem('usertype')==='superadmin'){\r\n\t\t\t\t\t\t\tsetUserId(row._id);\r\n\t\t\t\t\t\t\thandleShow()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Mode',\r\n\t\t\t\t\t\tdataField: 'mode',\r\n\t\t\t\t\t\theaderStyle: (colum, colIndex) => {\r\n\t\t\t\t\t\t\t\treturn { 'white-space': 'nowrap' };\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: true,\r\n\t\t\t\t},\r\n\t\t];\r\n    const { SearchBar } = Search;\r\n\t\tconst { ExportCSVButton } = CSVExport;\r\n\t\tconst [branchOptions, setBranchOptions] = useState([{label:'Choose',value:'choose'}]);\r\n\t\tconst [coachOptions, setCoachOptions] = useState([{label:'Choose',value:'choose'}]);\r\n\r\n    useEffect(() => {\r\n    (async () => {\r\n        const result = await Axios.get(\r\n            \"https://restoration-backend.herokuapp.com/api/newClients\"\r\n\t\t\t\t);\r\n\t\t\t\tconst branches = await Axios.get(\r\n            \"https://restoration-backend.herokuapp.com/api/sAdmin/branches\"\r\n\t\t\t\t);\r\n\t\t\t\tconst coaches = await Axios.get(\r\n            \"https://restoration-backend.herokuapp.com/api/sAdmin/coaches\"\r\n        );\r\n\t\t\t\tif(result){\r\n\t\t\t\t\tlet newClients=result.data.filter(a=>a.branchName==='Click To Allocate')\r\n\t\t\t\t\tsetRecords(newClients)\r\n\t\t\t\t};\r\n\t\t\t\tlet branchOptionsAll;\r\n\t\t\t\tif(branches) branchOptionsAll = branches?.data?.map(a=>{return {value:a._id,label:a.adminName}})\r\n\t\t\t\tif(branchOptionsAll.length){\r\n\t\t\t\t\tbranchOptionsAll.unshift({label:'Choose',value:''})\r\n\t\t\t\t\tsetBranchOptions(branchOptionsAll)\r\n\t\t\t\t}\r\n\t\t\t\tlet coachOptionsAll;\r\n\t\t\t\tif(coaches) coachOptionsAll = coaches?.data?.map(a=>{return {value:a._id,label:a.full_name}})\r\n\t\t\t\tif(coachOptionsAll.length){\r\n\t\t\t\t\tcoachOptionsAll.unshift({label:'Choose',value:''})\r\n\t\t\t\t\tsetCoachOptions(coachOptionsAll)\r\n\t\t\t\t}\r\n    })();\r\n\t\t}, []);\r\n\r\n\t\tconst [show, setShow] = useState(false);\r\n\t\tconst [showCoach, setShowCoach] = useState(false);\r\n\t\tconst [branchId, setBranchId] = useState();\r\n\t\tconst [coachId, setCoachId] = useState();\r\n\t\tconst [branchName, setBranchName] = useState();\r\n\t\tconst [coachName, setCoachName] = useState();\r\n\r\n\t\tconst handleChangeee=(e)=>{\r\n\t\t\tlet index = e.nativeEvent.target.selectedIndex;\r\n\t\t\tlet label = e.nativeEvent.target[index].text;\r\n\t\t\tsetBranchId(e.target.value)\r\n\t\t\tsetBranchName(label)\t\t\t\r\n\t\t}\r\n\r\n\t\tconst handleChangeCoach=async(e)=>{\r\n\t\t\tlet index = e.nativeEvent.target.selectedIndex;\r\n      let label = e.nativeEvent.target[index].text;\r\n\t\t\tsetCoachId(e.target.value)\r\n\t\t\tsetCoachName(label)\t\t\t\r\n\t\t}\r\n\r\n    const submitBranch = async() => {\r\n\t\t\tawait Axios.post(`https://restoration-backend.herokuapp.com/api/sAdmin/allocateBranch/${userId}/${branchId}/${branchName}`)\r\n\t\t\tsetShow(false)       \r\n\t\t};\r\n\r\n    const handleCloseCommon = async() => {\r\n\t\t\tsetShow(false)  \r\n\t\t\tsetShowCoach(false)      \r\n\t\t};\r\n\r\n\t\tconst submitCoach = async() => {\r\n\t\t\tawait Axios.post(`https://restoration-backend.herokuapp.com/api/sAdmin/allocateCoach/${userId}/${coachId}/${coachName}`)\r\n\t\t\tsetShowCoach(false)       \r\n\t\t};\r\n\t\tconst handleShow = () => setShow(true);\r\n\t\tconst handleShowCoach = () => setShowCoach(true);\r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"page-title\">\r\n                <Col className=\"col-12\">\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'SuperAdmin', path: '/superadmin/clientlist/allclients' },\r\n                            { label: 'ClientList', path: '/superadmin/clientlist/allclients' },\r\n                            { label: 'AllClients', path: '/superadmin/clientlist/allclients', active: true },\r\n                        ]}\r\n                        title={'All Clients'}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <ToolkitProvider\r\n                                bootstrap4\r\n                                keyField=\"id\"\r\n                                data={records}\r\n                                columns={columns}\r\n                                search\r\n                                exportCSV={{ onlyExportFiltered: true, exportAll: false }}>\r\n                                {(props) => (\r\n                                    <React.Fragment>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <SearchBar {...props.searchProps} />\r\n                                            </Col>\r\n                                            <Col className=\"text-right\">\r\n                                                <ExportCSVButton {...props.csvProps} className=\"btn btn-primary\">\r\n                                                    Export CSV\r\n                                                </ExportCSVButton>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <BootstrapTable\r\n                                            {...props.baseProps}\r\n                                            bordered={false}\r\n                                            defaultSorted={defaultSorted}\r\n                                            pagination={paginationFactory({\r\n                                                sizePerPage: 5,\r\n                                                sizePerPageRenderer: sizePerPageRenderer,\r\n                                                sizePerPageList: [\r\n                                                    { text: '5', value: 5 },\r\n                                                    { text: '10', value: 10 },\r\n                                                    { text: '25', value: 25 },\r\n                                                    { text: 'All', value: records.length },\r\n                                                ],\r\n                                            })}\r\n                                            wrapperClasses=\"table-responsive\"\r\n                                        />\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </ToolkitProvider>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\t\t\t\t\t\t <>\r\n\t\t\t\t\t\t<Modal show={show} onHide={handleCloseCommon}>\r\n\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t<Modal.Title>Allocate Branch</Modal.Title>\r\n\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t<label>Select Branch </label>\r\n\t\t\t\t\t\t\t\t{branchOptions.length ? \r\n\t\t\t\t\t\t\t\t<select onChange={handleChangeee}>\r\n\t\t\t\t\t\t\t\t{branchOptions.map((option) => (\r\n\t\t\t\t\t\t\t\t\t<option value={branchId}>{option.label}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n              </select>:<div>No branches Availabel</div>}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseCommon}>\r\n\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={submitBranch}>\r\n\t\t\t\t\t\t\t\t\tAllocate Branch\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t<Modal show={showCoach} onHide={handleCloseCommon}>\r\n\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t<Modal.Title>Allocate Coach</Modal.Title>\r\n\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t<label>Select Coach </label>\r\n\t\t\t\t\t\t\t\t{coachOptions.length ? <select onChange={handleChangeCoach}>\r\n\t\t\t\t\t\t\t\t{coachOptions.map((option) => (\r\n\t\t\t\t\t\t\t\t\t<option value={option.value}>{option.label}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n              </select>:<div>No coaches Availabel</div>}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseCommon}>\r\n\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={submitCoach}>\r\n\t\t\t\t\t\t\t\t\tAllocate Coach\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t</Modal>\r\n    </>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AllClients;\r\n"],"sourceRoot":""}